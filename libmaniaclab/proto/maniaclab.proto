syntax = "proto3";

package mlio;

enum TileArgType {
    /* 0..127 reserved for ManiacLab */
    INITIAL_TEMPERATURE = 0; /* float */
    INITIAL_HEAT_CAPACITY = 1; /* float */
    FLOW_INTENSITY = 2; /* float */
    FLOW_TURBULENCE = 3; /* float */
    FOG_RATE = 4; /* float */
    HEATER_TARGET_TEMPERATURE = 5; /* float */
    HEATER_RATE = 6; /* float */
    VISUAL_VARIATION_SELECTOR = 7; /* uint64 */
    LINKED_CELL = 8; /* CoordPair */
    ENABLED = 9; /* bool */

    /* 64..79 can be freely used by tilesets */
    TILESET_DEFINED_0 = 64;
    TILESET_DEFINED_1 = 65;
    TILESET_DEFINED_2 = 66;
    TILESET_DEFINED_3 = 67;
    TILESET_DEFINED_4 = 68;
    TILESET_DEFINED_5 = 69;
    TILESET_DEFINED_6 = 70;
    TILESET_DEFINED_7 = 71;
    TILESET_DEFINED_8 = 72;
    TILESET_DEFINED_9 = 73;
    TILESET_DEFINED_10 = 74;
    TILESET_DEFINED_11 = 75;
    TILESET_DEFINED_12 = 76;
    TILESET_DEFINED_13 = 77;
    TILESET_DEFINED_14 = 78;
    TILESET_DEFINED_15 = 79;

    /* 80..127 are again reserved for ManiacLab internally */

    /* 128..infty reserved for future use */
};

message CoordPair {
    uint32 x = 1;
    uint32 y = 2;
};

message TileArg {
    TileArgType type = 1;
    oneof value {
        string sval = 16;
        float fval = 17;
        double dval = 18;
        sint64 ival = 19;
        uint64 uival = 20;
        bool bval = 21;
        bytes binval = 22;
        CoordPair pval = 23;
    }
};

message Text {
    map<string, string> translations = 1;
};

message LevelHeader {
    Text title = 1;
    Text description = 2;
    repeated string authors = 3;
    Text license = 4;
};

message LevelCollectionHeader {
    Text title = 1;
    Text description = 2;
    repeated string authors = 3;
    Text default_license = 4;
    repeated LevelHeader levels = 5;
};

message TilesetRef {
    bytes uuid = 1;
};

message LevelCell {
    uint32 tileset = 1;
    bytes tile = 2;
    repeated TileArg argv = 3;
};

message Level {
    repeated TilesetRef tilesets = 1;
    repeated LevelCell cells = 2;
    CoordPair start = 3;
    CoordPair preview_start = 4;
};


/*message TilesetHeader {
    bytes uuid = 1;
};

message TileEvent {
    enum Type {
        HEADACHE = 1;
        IMPACT = 2;
    };
    Type type = 1;
    uint32 other_tileset = 2;
    bytes uuid = 3;
};

message MeasurementEvent {
    uint32 measurement
};

message LogicDetect {
    enum SimpleEvent {
        EXPLOSION_TOUCH = 1;
        IGNITION = 2;
        PLAYER_TOUCH = 3;
    };
    oneof detect_cfg {
        SimpleEvent simple_event = 1;
        TileEvent tile_event = 2;
        MeasurementEvent measurement_event = 3;
    };
};

message LogicEntry {
    oneof contents {
        LogicDetect detect = 1;
        LogicMeasurement measurement = 2;
    }
};

message Tile {
    bytes uuid = 1;

    *//* only used in editor *//*
    Text display_name = 2;
    Text notes = 3;

    *//* info section *//*
    bool is_destructible = 4;
    bool is_blocking = 5;
    bool is_destructible = 6;
    bool is_gravity_affected = 7;
    bool is_movable = 8;
    bool is_round = 9;
    bool is_sticky = 10;

    float roll_radius = 11;
    float temp_coefficient = 12;

    repeated bool stamp = 13;

    *//* visual info *//*

    *//* logic info *//*

};

message PixmapResource {
    enum Type {
        ALBEDO = 0;
        NORMAL = 1;
    }
    Type type = 1;
    bytes raw = 2;
};

message Tileset {
    Text title = 1;
    Text description = 2;
    repeated string authors = 3;
    Text license = 4;
    repeated Tile tiles = 5;
    repeated PixmapResource pixmaps = 6;
};
*/
